"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
from .info import *
from dotenv import load_dotenv
from decouple import config
import dj_database_url

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-ns-x!g2q4q1zysw3ohq#i9s-&e49r8^q&5+av5r+mue39#)!%&"

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'  # Désactivé pour le développement local


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'True').lower() == 'true'

ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', 'tradishop.ci,www.tradishop.ci,localhost,127.0.0.1').split(',')


# Email settings - configuration pour la réinitialisation de mot de passe
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'kadersoro18@gmail.com'
EMAIL_HOST_PASSWORD = 'your_app_password_here'  # Utiliser un mot de passe d'application Gmail
EMAIL_PORT = 587
EMAIL_USE_SSL = False

# Configuration pour les emails de réinitialisation
DEFAULT_FROM_EMAIL = 'Tradishop <kadersoro18@gmail.com>'
SERVER_EMAIL = 'kadersoro18@gmail.com'

# En mode développement, utiliser la console pour les emails
if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Email settings - configuration via variables d'environnement (optionnel)
# EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')
# EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='kadersoro18@gmail.com')
# EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
# EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
# EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='your_password_here')


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "social_django", #Auth social
    'crispy_forms',
    'crispy_bootstrap4',
    'bootstrap4',
    "shop",
]



MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Désactivé pour le développement local
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",  # Middleware pour les langues
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "social_django.middleware.SocialAuthExceptionMiddleware", #Auth social
]

ROOT_URLCONF = "ecommerce.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [TEMPLATES_DIR],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "social_django.context_processors.backends", #Auth social
            ],
        },
    },
]

WSGI_APPLICATION = "ecommerce.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# Configuration de base de données pour la production
# Base de données par défaut (SQLite pour le développement)
# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }

DATABASES = {
    'default': dj_database_url.config(
        default="postgresql://tradishop_user:AxUkVZZBM2JtbO2aEPCvtWRTRwow4Fqc@dpg-d3lmqhhr0fns73e4ihf0-a.oregon-postgres.render.com/tradishop"
    )
}

# Configuration PostgreSQL pour la production (Render)
if os.environ.get('DATABASE_URL'):
    try:
        import dj_database_url
        DATABASES['default'] = dj_database_url.config(
            default=os.environ.get('DATABASE_URL'),
            conn_max_age=600
        )
    except ImportError:
        # Si dj_database_url n'est pas installé, utiliser SQLite
        pass



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "fr"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Langues supportées
LANGUAGES = [
    ('fr', 'Français'),
    ('en', 'English'),
]

# Dossier des traductions
LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

# Devises supportées
CURRENCIES = {
    'FCFA': {'symbol': 'FCFA', 'rate': 1.0, 'name': 'Franc CFA'},
    'USD': {'symbol': '$', 'rate': 0.0017, 'name': 'Dollar US'},
    'EUR': {'symbol': '€', 'rate': 0.0015, 'name': 'Euro'},
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

#### configuration des fichier static et media

STATIC_URL = "/static/"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

MEDIA_URL = "/images/"

MEDIA_ROOT = os.path.join(BASE_DIR, "images")

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# WhiteNoise configuration pour la production
if not DEBUG:
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

CRISPY_TEMPLATE_PACK = 'bootstrap4'
